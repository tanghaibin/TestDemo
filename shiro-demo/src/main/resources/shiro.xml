<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->

       <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

       <!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
       <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>

       <!-- 缓存管理 -->
       <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>


    <!-- 自定义realm-->
    <bean id="myRealm2" class="top.tanghaibin.context.MyRole2"/>
       <!-- Shiro安全管理器 -->
       <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
              <property name="realm" ref="myRealm2"></property>
              <property name="cacheManager" ref="cacheManager"></property>
       </bean>

    <!-- 自定义身份验证过滤器-->
    <bean id="restFilter" class="top.tanghaibin.context.ShiroRestFilter"></bean>
       <!--
          Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行
          Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持
       -->
       <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
              <!-- Shiro的核心安全接口，这个属性是必须的 -->
              <property name="securityManager" ref="securityManager"></property>
              <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
              <!--<property name="loginUrl" value="/login"></property>-->
              <!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->
              <!-- <property name="successUrl" value="/" ></property> -->
              <!-- 用户访问未对其授权的资源时，所显示的连接 -->
              <property name="unauthorizedUrl" value="/error.jsp"></property>
              <property name="filters">
                  <util:map>
                    <entry key="restFilter" value-ref="restFilter"/>
                  </util:map>
              </property>
              <property name="filterChainDefinitions">
                     <value>
                         /user/login=anon
                         /system/*=authc
                         /**=restFilter
                     </value>
              </property>
       </bean>

</beans>